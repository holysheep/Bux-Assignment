apply plugin: Plugins.kotlinAndroid
apply plugin: Plugins.kotlinAndroidExtensions
apply plugin: Plugins.kotlinKapt

android {
    compileSdkVersion AndroidVersions.compileSdk
    buildToolsVersion AndroidVersions.androidBuildTools

    defaultConfig {
        minSdkVersion AndroidVersions.minSdk
        targetSdkVersion AndroidVersions.targetSdk
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.forEach {
        it.buildConfigField('String', 'API_BASE_URL', '"https://api.beta.getbux.com"')
        it.buildConfigField('String', 'WS_BASE_URL', '"https://rtf.beta.getbux.com"')
        it.buildConfigField('String', 'TOKEN', getPropsAuthToken())
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    sourceSets {
        getByName("main").java.srcDirs("src/main/kotlin")
        getByName("test").java.srcDirs("src/test/kotlin")
        getByName("androidTest").java.srcDirs("src/androidTest/kotlin")
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += [
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi"]
    }


    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

def getPropsAuthToken() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("authToken")
}
